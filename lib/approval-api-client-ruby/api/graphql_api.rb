=begin
#Insights Service Approval APIs

#APIs to query approval service

OpenAPI spec version: 1.0.0
Contact: support@redhat.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

require 'uri'

module ApprovalApiClient
  class GraphqlApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Perform a GraphQL Query
    # Performs a GraphQL Query
    # @param graphql_in GraphQL Query Request
    # @param [Hash] opts the optional parameters
    # @return [GraphqlOut]
    def post_graphql(graphql_in, opts = {})
      data, _status_code, _headers = post_graphql_with_http_info(graphql_in, opts)
      data
    end

    # Perform a GraphQL Query
    # Performs a GraphQL Query
    # @param graphql_in GraphQL Query Request
    # @param [Hash] opts the optional parameters
    # @return [Array<(GraphqlOut, Fixnum, Hash)>] GraphqlOut data, response status code and response headers
    def post_graphql_with_http_info(graphql_in, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: GraphqlApi.post_graphql ...'
      end
      # verify the required parameter 'graphql_in' is set
      if @api_client.config.client_side_validation && graphql_in.nil?
        fail ArgumentError, "Missing the required parameter 'graphql_in' when calling GraphqlApi.post_graphql"
      end
      # resource path
      local_var_path = '/graphql'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(graphql_in)
      auth_names = ['Basic_auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'GraphqlOut')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GraphqlApi#post_graphql\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end
end
